{"version":3,"file":"comments.min.js","sources":["../src/comments.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript controller for the socialcomments block.\n *\n * @module     block_socialcomments/comments\n * @copyright 2021, bdecent gmbh bdecent.de\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/ajax', 'core/notification', 'core/str'], function($, ajax, notification, corestr) {\n\n    var LASTPAGE = -1;\n\n    var params = null; // ...contextid, subscribed, commentscount.\n\n    var editcommentid = 0; // Current edited comment.\n    var replycommentid = 0; // Id of comment user is currently replying.\n    var replyid = 0; // Current edited reply;\n    var menunumber = -1; // Current opened menu.\n    var pagenumber = 0; // Current loaded page.\n\n    var $formtextarea = null;\n    var $formactionpost = null;\n\n    var $edittextarea = null;\n    var $editactionsave = null;\n\n    var $replytextarea = null;\n    var $replyactionsave = null;\n\n    var $commentscontent = null; // Container wrapping the comments area.\n\n    /**\n     * Check post content and do an alert when empty.\n     *\n     * @param {string} content - Content of the post.\n     * @returns {boolean} - Result is true when the post content is empty.\n     */\n    function alertPostEmpty(content) {\n\n        if (!content) {\n            corestr.get_strings([\n                {'key': 'error'},\n                {'key': 'pleaseinputtext', component: 'block_socialcomments'}\n            ]).done(function(s) {\n                notification.alert(s[0], s[1]);\n            }\n            ).fail(notification.exception);\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Move form.\n     */\n    function moveForms() {\n        $('#ccomment-editform-wrap').append($('#ccomment-editform'));\n        resetEditComment();\n\n        $('#ccomment-replyform-wrap').append($('#ccomment-replyform'));\n        resetReplyComment();\n    }\n\n    /**\n     * Get HTML of a page with pagenumber 0..maxpage via AJAX.\n     *\n     * @param {int} newpagenumber Number of the page.\n     */\n    function loadCommentsPage(newpagenumber) {\n\n        moveForms();\n\n        ajax.call([\n            {\n                methodname: 'block_socialcomments_get_commentspage',\n                args: {\n                    contextid: params.contextid,\n                    pagenumber: newpagenumber,\n                    hidepins: params.hidepins\n                },\n                done: function(response) {\n                    pagenumber = response.pagenumber;\n                    $('#ccomment-commentspage-wrap').html(response.commentspage);\n                },\n                fail: notification.exception\n            }\n        ], false);\n    }\n\n    /**\n     * Create a new comment, when commentid == 0 or update a comment.\n     *\n     * @param {Object} $textarea\n     * @param {int} commentid\n     */\n    function saveComment($textarea, commentid) {\n\n        var content = $textarea.val();\n        var groupid = $('#ccomments-groupid').val();\n\n        if (!alertPostEmpty(content)) {\n\n            ajax.call([\n                {\n                    methodname: 'block_socialcomments_save_comment',\n                    args: {\n                        contextid: params.contextid,\n                        content: content,\n                        groupid: groupid,\n                        id: commentid\n                    },\n                    done: function(response) {\n                        // Update display.\n                        $('.ccomment-comments-count').html(response.count);\n                        $('#ccomment-comments-content-top').removeClass('hidden');\n                        $textarea.val('');\n                        // Load the Page the comment is visible.\n                        if (commentid === 0) {\n                            loadCommentsPage(LASTPAGE);\n                            // When user posts new comment, set subscribed checkbox to true.\n                            $('#ccomment-comments-subscribed').prop('checked', true);\n                        } else {\n                            loadCommentsPage(pagenumber);\n                        }\n                        // Check, whether element is visible, if not scroll.\n                        var comment = $(\"#ccomment-comment-listitem-\" + response.id);\n                        var win = $(window);\n                        if (comment.offset().top > win.scrollTop() + win.height()) {\n                            $('html, body').animate({\n                                scrollTop: comment.offset().top - comment.outerHeight()\n                            }, 1000);\n                        }\n                    },\n                    fail: notification.exception\n                }\n            ], false);\n        }\n    }\n\n    /**\n     * Save a reply, create when replyid == 0 or update otherwise.\n     *\n     * @param {Object} $textarea jQuery object of textarea.\n     * @param {int} replyid ID of the reply.\n     */\n    function saveReply($textarea, replyid) {\n\n        var content = $textarea.val();\n\n        if (!alertPostEmpty(content)) {\n\n            ajax.call([\n                {\n                    methodname: 'block_socialcomments_save_reply',\n                    args: {\n                        contextid: params.contextid,\n                        content: content,\n                        commentid: replycommentid,\n                        id: replyid\n                    },\n                    done: function() {\n                        // Update display.\n                        $textarea.val('');\n                        // Load the Page the where the comment is visible.\n                        loadCommentsPage(pagenumber);\n                    },\n                    fail: notification.exception\n                }\n            ], false);\n        }\n    }\n\n    /**\n     * Display a the deleted message and refresh commentslist after some secs.\n     *\n     * @param {Object} response of AJAX call.\n     */\n    function onCommentDeleteDone(response) {\n\n        // Before delete DOM Elements move forms to safe place.\n        moveForms();\n\n        corestr.get_string('commentdeleted', 'block_socialcomments').done(function(s) {\n            $('#ccomment-comment-listitem-' + response.deletedcommentid).addClass('ccomment-highlight');\n            $('#ccomment-comment-listitem-' + response.deletedcommentid).html(s).fadeOut(2000, function() {\n                loadCommentsPage(pagenumber);\n            });\n        });\n\n        corestr.get_string('commentscount', 'block_socialcomments', response.count).done(function(s) {\n            $('.ccomment-comments-count').html(s);\n        });\n\n        // Probably hide the comments top content (Count and subscribed checkbox).\n        if ((response.count === 0) && (!params.subscribed)) {\n            $('#ccomment-comments-content-top').addClass('hidden');\n        }\n    }\n\n    /**\n     * Delete a comment in the database.\n     *\n     * @param {Object} $href jQuery object of ancor.\n     */\n    function onCommentDeleteClicked($href) {\n\n        ajax.call([\n            {\n                methodname: 'block_socialcomments_delete_comment',\n                args: {\n                    commentid: Number($href.attr('id').split('-')[4])\n                },\n                done: onCommentDeleteDone,\n                fail: notification.exception\n            }\n        ]);\n    }\n\n    /**\n     * Display a the deleted message and refresh commentslist after some secs.\n     *\n     * @param {Object} response of AJAX call.\n     */\n    function onReplyDeleteDone(response) {\n\n        // Before delete DOM Elements move forms to safe place.\n        moveForms();\n\n        corestr.get_string('replydeleted', 'block_socialcomments').done(function(s) {\n            $('#ccomment-reply-' + response.deletedreplyid).addClass('ccomment-highlight');\n            $('#ccomment-reply-' + response.deletedreplyid).html(s).fadeOut(2000, function() {\n                loadCommentsPage(pagenumber);\n            });\n        });\n    }\n\n    /**\n     * Delete a reply in the database.\n     *\n     * @param {Object} $href jQuery object of ancor.\n     */\n    function onReplyDeleteClicked($href) {\n\n        ajax.call([\n            {\n                methodname: 'block_socialcomments_delete_reply',\n                args: {\n                    replyid: Number($href.attr('id').split('-')[4])\n                },\n                done: onReplyDeleteDone,\n                fail: notification.exception\n            }\n        ]);\n    }\n\n    /**\n     * Save the pin status for comment or page in database.\n     *\n     * @param {Object} $checkbox\n     */\n    function onPinnedClicked($checkbox) {\n\n        ajax.call([\n            {\n                methodname: 'block_socialcomments_set_pinned',\n                args: {\n                    contextid: params.contextid,\n                    checked: $checkbox.prop('checked'),\n                    commentid: Number($checkbox.attr('id').split('-')[2])\n                },\n                done: function(response) {\n                    $checkbox.prop('checked', response.checked);\n                    // Set correct tooltip.\n                    var $tooltipdiv = $checkbox.parent().find('.ccomments-pin-tooltip');\n                    $tooltipdiv.html(response.tooltip);\n                },\n                fail: notification.exception\n            }\n        ]);\n    }\n\n    /**\n     * Save the subscribed status for the page in database.\n     *\n     * @param {Object} $checkbox\n     */\n    function onSubscribeClicked($checkbox) {\n\n        ajax.call([\n            {\n                methodname: 'block_socialcomments_set_subscribed',\n                args: {\n                    contextid: params.contextid,\n                    checked: $checkbox.prop('checked')\n                },\n                done: function(response) {\n                    params.subscribed = response.checked;\n                    $checkbox.prop('checked').prop('checked', params.subscribed);\n                },\n                fail: notification.exception\n            }\n        ]);\n    }\n\n    /**\n     * Load the form and note the commentid.\n     *\n     * @param {Object} $href\n     */\n    function startCreateReply($href) {\n\n        cancelReplyComment();\n\n        // Note the parent comment id.\n        replycommentid = Number($href.attr('id').split('-')[2]);\n        $replytextarea.attr('data-commentid', replycommentid);\n\n        // Load the form.\n        var $replylist = $('#ccomment-reply-list-' + replycommentid);\n        $replylist.before($('#ccomment-replyform'));\n    }\n\n    /**\n     * Load the form into the comment and fill textarea with comments text.\n     *\n     * @param {Object} $href\n     */\n    function startEditReply($href) {\n\n        cancelReplyComment();\n\n        // Note the replyid.\n        replyid = Number($href.attr('id').split('-')[4]);\n        $replytextarea.attr('data-replyid', replyid);\n\n        // Load the form.\n        var $contentdiv = $('#ccomment-reply-' + replyid + ' .ccomment-post-content');\n        $replytextarea.val($contentdiv.html());\n        $contentdiv.after($('#ccomment-replyform'));\n        $contentdiv.hide();\n    }\n\n    /**\n     * Cancel editing or creating a reply.\n     */\n    function cancelReplyComment() {\n        $('#ccomment-replyform-wrap').append($('#ccomment-replyform'));\n        $('#ccomment-reply-' + replyid + ' .ccomment-post-content').show();\n        resetReplyComment();\n    }\n\n    /**\n     * Resetting reply form to default\n     */\n    function resetReplyComment() {\n        replyid = 0;\n        $replytextarea.attr('data-replyid', 0);\n        replycommentid = 0;\n        $replytextarea.attr('data-commentid', 0);\n        $replytextarea.val('');\n    }\n\n    /**\n     * Load the form into the comment and fill textarea with comments text.\n     *\n     * @param {Objec} $href\n     */\n    function startEditComment($href) {\n\n        cancelEditComment();\n\n        // Note the commentid.\n        editcommentid = Number($href.attr('id').split('-')[4]);\n        $edittextarea.attr('data-commentid', editcommentid);\n\n        // Load the form.\n        var $contentdiv = $('#ccomment-post-' + editcommentid + ' .ccomment-post-content');\n        $edittextarea.val($contentdiv.html());\n        $contentdiv.after($('#ccomment-editform'));\n        $contentdiv.hide();\n    }\n\n    /**\n     * Resetting edit comment form to default and show existing comment.\n     */\n    function cancelEditComment() {\n        $('#ccomment-editform-wrap').append($('#ccomment-editform'));\n        $('#ccomment-post-' + editcommentid + ' .ccomment-post-content').show();\n        resetEditComment();\n    }\n\n    /**\n     * Resetting edit comment form to default\n     */\n    function resetEditComment() {\n        editcommentid = 0;\n        $edittextarea.attr('data-commentid', 0);\n        $edittextarea.val('');\n    }\n\n    /**\n     * Load the page of comments.\n     *\n     * @param {Object} $href\n     */\n    function onPagingClicked($href) {\n        pagenumber = Number($href.attr('id').split('-')[2]);\n        loadCommentsPage(pagenumber);\n    }\n\n    /**\n     * Show action menu.\n     *\n     * @param {Object} href link to trigger menu\n     */\n    function showMenu(href) {\n\n        hideMenu();\n\n        menunumber = Number(href.attr('id').split('-')[3]);\n        $('#ccomment-comments-content #action-menu-' + menunumber).addClass('show');\n        $('#ccomment-comments-content #action-menu-' + menunumber).attr('data-enhanced', 1);\n    }\n\n    /**\n     * Hide action menu.\n     */\n    function hideMenu() {\n\n        if (menunumber >= 0) {\n            $('#ccomment-comments-content #action-menu-' + menunumber).removeClass('show');\n            $('#ccomment-comments-content #action-menu-' + menunumber).removeAttr('data-enhanced');\n            menunumber = -1;\n        }\n    }\n\n    /**\n     * Hightlight the button.\n     *\n     * @param {Object} $actionbutton\n     * @param {String} content\n     */\n    function highlightActionButton($actionbutton, content) {\n        if (!content) {\n            $actionbutton.removeClass('ccomment-highlight-button');\n        } else {\n            $actionbutton.addClass('ccomment-highlight-button');\n        }\n    }\n\n    /**\n     * Attach eventlisteners for comments.\n     */\n    function initCommentForms() {\n\n        $formtextarea = $('#ccomment-form-textarea');\n        $formactionpost = $('#ccomment-form-action-post');\n\n        $formactionpost.click(function() {\n            saveComment($formtextarea, 0);\n            highlightActionButton($formactionpost, $formtextarea.val());\n        });\n\n        $formtextarea.keyup(function() {\n            highlightActionButton($formactionpost, $formtextarea.val());\n        });\n\n        $('#ccomment-form-action-cancel').click(function() {\n            $formtextarea.val('');\n            $formactionpost.removeClass('ccomment-highlight-button');\n        });\n\n        $edittextarea = $('#ccomment-edit-textarea');\n        $editactionsave = $('#ccomment-edit-action-save');\n\n        // Edit comment.\n        $editactionsave.click(function() {\n\n            editcommentid = $edittextarea.attr('data-commentid');\n\n            if (editcommentid > 0) {\n                saveComment($edittextarea, editcommentid);\n                highlightActionButton($editactionsave, $edittextarea.val());\n            }\n        });\n\n        // Cancel editing comment.\n        $('#ccomment-edit-action-cancel').click(function() {\n            if (editcommentid > 0) {\n                cancelEditComment();\n                resetEditComment();\n            }\n        });\n\n        $edittextarea.keyup(function() {\n            highlightActionButton($editactionsave, $edittextarea.val());\n        });\n\n        // Action menu.\n        $commentscontent.delegate('a[id^=\"ccomment-post-action-delete-\"]', 'click', function(e) {\n            e.preventDefault();\n            onCommentDeleteClicked($(this));\n        });\n\n        $commentscontent.delegate('a[id^=\"ccomment-post-action-edit-\"]', 'click', function(e) {\n            e.preventDefault();\n            startEditComment($(this));\n        });\n\n        // Reply-Link.\n        $commentscontent.delegate('a[id^=\"ccomment-reply-\"]', 'click', function(e) {\n            e.preventDefault();\n            startCreateReply($(this));\n        });\n    }\n\n    /**\n     * Attach eventlisteners for replies.\n     */\n    function initReplyForms() {\n\n        $replytextarea = $('#ccomment-reply-textarea');\n        $replyactionsave = $('#ccomment-reply-action-save');\n\n        $replyactionsave.click(function() {\n            saveReply($replytextarea, replyid);\n            highlightActionButton($replyactionsave, $replytextarea.val());\n        });\n\n        // Cancel editing reply.\n        $('#ccomment-reply-action-cancel').click(function() {\n            cancelReplyComment();\n            resetReplyComment();\n        });\n\n        $replytextarea.keyup(function() {\n            highlightActionButton($replyactionsave, $replytextarea.val());\n        });\n\n        // Action menu.\n        $commentscontent.delegate('a[id^=\"ccomment-reply-action-delete-\"]', 'click', function(e) {\n            e.preventDefault();\n            onReplyDeleteClicked($(this));\n        });\n\n        $commentscontent.delegate('a[id^=\"ccomment-reply-action-edit-\"]', 'click', function(e) {\n            e.preventDefault();\n            startEditReply($(this));\n        });\n    }\n\n    return {\n        init: function(initparams) {\n\n            // Params.\n            params = initparams;\n\n            // Container for all AJAX-loaded objects for delegations.\n            $commentscontent = $('#ccomment-comments-content');\n\n            // Creating and editing a comment.\n            initCommentForms();\n\n            // Creating and editing a reply.\n            initReplyForms();\n\n            // Pin page or comment.\n            $('.block_socialcomments').delegate('input[id^=\"ccomment-pinned-\"]', 'click', function() {\n                onPinnedClicked($(this));\n            });\n            // Subscribe.\n            $('#ccomment-comments-subscribed').click(function() {\n                onSubscribeClicked($(this));\n            });\n            // Open menu.\n            $commentscontent.delegate('a[id^=\"action-menu-toggle-\"]', 'click', function(e) {\n                e.preventDefault();\n                showMenu($(this));\n            });\n            // Pagination.\n            $commentscontent.delegate('a[id^=\"ccomment-pagelink-\"]', 'click', function(e) {\n                e.preventDefault();\n                onPagingClicked($(this));\n            });\n            // Hide menu.\n            $(window).click(function() {\n                hideMenu();\n            });\n\n        }\n    };\n});\n"],"names":["define","$","ajax","notification","corestr","params","editcommentid","replycommentid","replyid","menunumber","pagenumber","$formtextarea","$formactionpost","$edittextarea","$editactionsave","$replytextarea","$replyactionsave","$commentscontent","alertPostEmpty","content","get_strings","component","done","s","alert","fail","exception","moveForms","append","resetEditComment","resetReplyComment","loadCommentsPage","newpagenumber","call","methodname","args","contextid","hidepins","response","html","commentspage","saveComment","$textarea","commentid","val","groupid","id","count","removeClass","prop","comment","win","window","offset","top","scrollTop","height","animate","outerHeight","onCommentDeleteDone","get_string","deletedcommentid","addClass","fadeOut","subscribed","onReplyDeleteDone","deletedreplyid","cancelReplyComment","show","attr","cancelEditComment","hideMenu","removeAttr","highlightActionButton","$actionbutton","initCommentForms","click","keyup","delegate","e","$href","preventDefault","this","Number","split","$contentdiv","after","hide","startEditComment","before","initReplyForms","saveReply","startEditReply","init","initparams","$checkbox","checked","parent","find","tooltip","href"],"mappings":"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"}